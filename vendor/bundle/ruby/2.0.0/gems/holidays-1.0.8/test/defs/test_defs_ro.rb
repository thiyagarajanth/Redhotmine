# encoding: utf-8
require File.expand_path(File.dirname(__FILE__)) + '/../test_helper'

# This file is generated by the Ruby Holiday gem.
#
# Definitions loaded: data/ro.yaml
class RoDefinitionTests < Test::Unit::TestCase  # :nodoc:

  def test_ro
{
 Date.civil(1961,4,9) => 'Paștele',
 Date.civil(1961,4,10) => 'Paștele',
 Date.civil(2013,5,5) => 'Paștele',
 Date.civil(2013,5,6) => 'Paștele',
 Date.civil(2027,5,2) => 'Paștele',
 Date.civil(2027,5,3) => 'Paștele',
 Date.civil(2012,6,4) => 'Rusaliile',
 Date.civil(2013,6,23) => 'Rusaliile',
 Date.civil(2013,6,24) => 'Rusaliile',
 Date.civil(1986,6,22) => 'Rusaliile',
 Date.civil(1986,6,23) => 'Rusaliile',
 Date.civil(2009,1,1) => 'Anul nou',
 Date.civil(2014,1,2) => 'Anul nou',
 Date.civil(2009,5,1) => 'Ziua muncii',
 Date.civil(2012,8,15) => 'Adormirea Maicii Domnului',
 Date.civil(2013,11,30) => 'Sfântul Apostol Andrei',
 Date.civil(2013,12,1) => 'Ziua Națională',
 Date.civil(2013,12,25) => 'Sărbătoarea Nașterii Domnului',
 Date.civil(2013,12,26) => 'Sărbătoarea Nașterii Domnului'}.each do |date, name|
  assert_equal name, (Holidays.on(date, :ro, :informal)[0] || {})[:name]
 end

 assert !Date.civil(2013,7,23).holiday?(:ro), '2010-07-23 is not a holiday in Romania'
 assert !Date.civil(2013,7,23).holiday?(:ro), '2010-07-23 is not a holiday in Romania'

  end
end
